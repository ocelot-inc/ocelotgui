#!/usr/bin/make -f
export DH_VERBOSE = 1
export DEB_BUILD_MAINT_OPTIONS = hardening=+all
export DEB_CFLAGS_MAINT_APPEND  = -Wall -pedantic
export DEB_LDFLAGS_MAINT_APPEND = -Wl,--as-needed

# Find includedirectory within the installed MySQL|MariaDB package
# Todo: Make sure Build-Depends: happens first. Doubtless it will be OCELOT_MYSQL_PACKAGE.
# Todo: See what happens if default-mysql-client or default-mysql-client-core is installed instead.
# Todo: Probably it's unnecessary to have dh_auto_install -- prefix=/usr here
# Todo: Comment somewhere (maybe in README.Debian): You still might need to set LD_LIBRARY_PATH
# Todo: In the grep you could insist that the .h be in an include directory
# Todo: Test when you actually have libmariadb-dev installed, or nothing installed, or something with mysql.hh
# Todo: Test when you actually have a symlink, though I suppose that's rather unlikely

OCELOT_MYSQL_PACKAGE = libmariadbclient-dev
OCELOT_TMP = $(shell dpkg -L $(OCELOT_MYSQL_PACKAGE) | grep "/mysql.h$$")
ifeq (,$(findstring mysql.h,$(OCELOT_TMP)))
  OCELOT_MYSQL_PACKAGE = libmysqlclient-dev
  OCELOT_TMP = $(shell dpkg -L $(OCELOT_MYSQL_PACKAGE) | grep "/mysql.h$$")  
  ifeq (,$(findstring mysql.h,$(OCELOT_TMP)))
    $(error Cannot find mysql.h in either libmysqlclient-dev or libmariadbclient-dev)
  endif
endif
OCELOT_MYSQL_INCLUDE_DIR = $(dir $(OCELOT_TMP))

OCELOT_C_FLAGS = $(shell dpkg-buildflags --get CFLAGS)
OCELOT_CXX_FLAGS = $(shell dpkg-buildflags --get CXXFLAGS)
OCELOT_CPP_FLAGS = $(shell dpkg-buildflags --get CPPFLAGS)

%:
	dh $@  

override_dh_auto_install:
	dh_auto_install -- prefix=/usr

override_dh_auto_configure:
	dh_auto_configure -- -DPACKAGE_TYPE="DEB" \
			     -DMYSQL_INCLUDE_DIR=${OCELOT_MYSQL_INCLUDE_DIR} \
                             -DCMAKE_SKIP_RPATH=TRUE \
                             -DQT_VERSION=5 \
                             -DOCELOT_C_FLAGS="${OCELOT_C_FLAGS}" \
                             -DOCELOT_CXX_FLAGS="${OCELOT_CXX_FLAGS}" \
                             -DOCELOT_CPP_FLAGS="${OCELOT_CPP_FLAGS}"
